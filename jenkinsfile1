node
{
def mavenHome = tool name: "maven-3.8.6"
try
{
stage('checkout code')
{
git credentialsId: '93159d0f-4d23-4419-afb5-15891cd2de92', url: 'https://github.com/tejaswigangisetty/maven-web-application.git'
}
stage('build')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage('execute sonarqube report')
{
sh "${mavenHome}/bin/mvn clean package sonar:sonar"
}
stage('nexus backup')
{
sh "${mavenHome}/bin/mvn clean package deploy"
}
}
catch (e)
{
currentBuild.result= "FAILED"
throw e
}
finally
{
notifyBuild(currentBuild.result)
/*
Stage('deploy app into tomcat server')
{

sshagent(['7b7ea858-1494-438b-92d6-f299a504e43d']) 
{
sh "scp -o StrictHostKeyChecking=no maven-web-application.war ec2-user@43.204.96.25:/opt/apache-tomcat-9.0.64/webapps"
}
}
*/
}
}
def notifySlack(StringbuildStatus = 'STARTED')
 {
    // Build status of null means success.
buildStatus = buildStatus ?: 'SUCCESS'
def color
if(buildStatus == 'STARTED') 
{
        color = '#D4DADF'
} 
elseif(buildStatus == 'SUCCESS') 
{
        color = '#BDFFC3'
} 
elseif(buildStatus == 'UNSTABLE') 
{
        color = '#FFFE89'
} 
else
{
        color = '#FF9FA1'
}
def msg = "${buildStatus}: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}"
slackSend(color: color, message: msg)
}

